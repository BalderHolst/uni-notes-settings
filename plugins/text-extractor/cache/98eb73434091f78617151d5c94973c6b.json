{"path":"Lessons/Semester 2/Kinematik/Lecture 5 - Other Orientation Representations.pdf","text":"Lecture 5: Other Orientation Representations Iñigo Iturrate Assistant Professor SDU Robotics, The Maersk McKinney Moller Institute, University of Southern Denmark inju@mmmi.sdu.dk Ø27-604-3 4 What are we doing today? 1. CAD Modelling in Autodesk Inventor – Guest Lecture by Aljaz Kramberger 2. CAD Assemblies in Autodesk Inventor – Guest Lecture by Aljaz Kramberger 3. Introduction to Robotics & Recap of Linear Algebra and Mathematical Notation 4. Translations & Rotation Matrices 5. Other Representations for Orientation (Today) 6. Transformation Matrices 7. DH Parameters & Forward Kinematics 8. Analytical Forward Kinematics & Kinematic Simulation 9. Inverse Kinematics 10. Velocity Kinematics & the Jacobian Matrix 11. More about the Jacobian & Trajectory Generation 12. Manipulability, More on the Robotic Systems Toolbox 5 Topics for Today Part I: • The ”problem” with orientation • ”Warm-up” exercise/discussion • Overview of orientation/rotation representations Part II: • Angle-Set Conventions  Fixed angles  Euler angles • Gimbal Lock Part III: Equivalent angle-axis (Euler vector) Part I: What is this whole fuss about orientation? (or why we are using more than one lecture on it) 7 The Concept of Orientation How would you represent an orientation: • If we lived in a 1D world? • If we lived in a 2D world? • If we lived in a 3D world? 8 Why is Orientation Difficult? Position is all nice and easy for our brains. • We like . It is easy to relate to: Orientation is a funky concept to your brain, in terms of mathematics. • Orientation does not live in . It is related to circles and spheres and lives in (in 3D). Funny things happen: ?!?! 9 Rotation vs. Orientation • Orientation describes a state. • Rotation is an operation, i.e. it describes how to get from one orientation to another. �𝑿𝑿𝑩𝑩 �𝒁𝒁𝑩𝑩 �𝒀𝒀𝑩𝑩 𝑩𝑩 �𝒁𝒁𝐴𝐴 �𝒀𝒀𝐴𝐴 �𝑿𝑿𝐴𝐴 𝑨𝑨 Rotation Orientation Orientation 10 How do you get from {A} to {B}? �𝑿𝑿𝑩𝑩 �𝒁𝒁𝑩𝑩 �𝒀𝒀𝑩𝑩 𝑩𝑩 �𝒁𝒁𝐴𝐴 �𝒀𝒀𝐴𝐴 �𝑿𝑿𝐴𝐴 𝑨𝑨 ??? Splitting the 3D problem into a sequence of rotations is one solution*: • You may think this is easy… • …so why did I say orientation is difficult? • Well, this solution carries other problems, as we will see. *Note: Called Euler angles. 11 (Subjective) Overview of Orientation Representations Angles-set Conventions Quaternions* Rotation Matrices Equivalent Angle-Axis Intuitive (for visualization) Useful (for calculation) *Quaternions are wonderful and extremely powerful. Also, they live in a 4-dimensional space and will therefore make your brain explode if you think too much about them. This is probably the most subjective part 12 Orientation/Rotation Representations: Use-Cases Fixed angles 𝛼𝛼, 𝛽𝛽, 𝛾𝛾 Rotation matrix 𝑟𝑟11 𝑟𝑟12 𝑟𝑟13 𝑟𝑟21 𝑟𝑟22 𝑟𝑟23 𝑟𝑟31 𝑟𝑟32 𝑟𝑟33 Euler angles 𝛼𝛼, 𝛽𝛽, 𝛾𝛾 Angle-axis 𝜃𝜃, 𝑘𝑘𝑥𝑥, 𝑘𝑘𝑦𝑦, 𝑘𝑘𝑧𝑧 Quaternions 𝜖𝜖1, 𝜖𝜖2, 𝜖𝜖3, 𝜖𝜖4 (Chap. 2, pp. 50) Visualization Parts based on Kinematics Lecture Slides by Christian Schlette, Professor, SDU Robotics Calculations Calculations/ Animations Calculations/ Animations Part II: Angle-Set Conventions 14 Angle-Set Conventions Angle-set conventions represent orientation as three separate rotations around different axes. • For fixed angles, the coordinate system stays fixed/still. • For Euler angles, the coordinate system rotates. The rotations can be applied in many orders. Fixed Angles Roll (𝛾𝛾) Pitch (𝛽𝛽) Yaw (𝛼𝛼) Euler Angles Roll Pitch Yaw 15 All 24 Angle-Set Conventions 12 Euler angles sets 𝑹𝑹𝑋𝑋′𝑌𝑌′𝑍𝑍′ 𝑹𝑹𝑋𝑋′𝑍𝑍′𝑌𝑌′ 𝑹𝑹𝑌𝑌′𝑋𝑋′𝑍𝑍′ 𝑹𝑹𝑌𝑌′𝑍𝑍′𝑋𝑋′ 𝑹𝑹𝑍𝑍′𝑋𝑋′𝑌𝑌′ 𝑹𝑹𝑍𝑍′𝑌𝑌′𝑋𝑋′ 𝑹𝑹𝑋𝑋′𝑌𝑌′𝑋𝑋′ 𝑹𝑹𝑋𝑋′𝑍𝑍′𝑋𝑋′ 𝑹𝑹𝑌𝑌′𝑋𝑋′𝑌𝑌′ 𝑹𝑹𝑌𝑌′𝑍𝑍′𝑌𝑌′ 𝑹𝑹𝑍𝑍′𝑋𝑋′𝑍𝑍′ 𝑹𝑹𝑍𝑍′𝑌𝑌′𝑍𝑍′ 12 Fixed angle sets 𝑹𝑹𝑋𝑋𝑌𝑌𝑍𝑍 𝑹𝑹𝑋𝑋𝑍𝑍𝑌𝑌 𝑹𝑹𝑌𝑌𝑋𝑋𝑍𝑍 𝑹𝑹𝑌𝑌𝑍𝑍𝑋𝑋 𝑹𝑹𝑍𝑍𝑋𝑋𝑌𝑌 𝑹𝑹𝑍𝑍𝑌𝑌𝑋𝑋 𝑹𝑹𝑋𝑋𝑌𝑌𝑋𝑋 𝑹𝑹𝑋𝑋𝑍𝑍𝑋𝑋 𝑹𝑹𝑌𝑌𝑋𝑋𝑌𝑌 𝑹𝑹𝑌𝑌𝑍𝑍𝑌𝑌 𝑹𝑹𝑍𝑍𝑋𝑋𝑍𝑍 𝑹𝑹𝑌𝑌𝑍𝑍𝑌𝑌 Based on Kinematics Lecture Slides by Christian Schlette, Professor, SDU Robotics 16 Euler Angles Z-Y-X Euler angles: Each rotation is performed about an axis of the coordinate system from the last step. 1. Start with a known frame {𝑨𝑨}. Rotate first about �𝒁𝒁𝐴𝐴 by angle 𝛼𝛼. 2. Then, rotate about the resulting �𝒀𝒀𝐵𝐵 ′ by angle 𝛽𝛽. 3. Finally, rotate about the resulting �𝑿𝑿𝐵𝐵 ′′ by angle 𝛾𝛾. �𝒀𝒀𝐵𝐵 ′′ 𝛾𝛾 �𝑿𝑿𝐵𝐵 ′′= �𝑿𝑿𝐵𝐵 ′′′ �𝒀𝒀𝐵𝐵 ′′′ �𝒁𝒁𝐵𝐵 ′′ �𝒁𝒁𝐵𝐵 ′′′ �𝒁𝒁𝐵𝐵 ′ �𝒀𝒀𝐵𝐵 ′ = �𝒀𝒀𝐵𝐵 ′′ 𝛽𝛽 �𝒁𝒁𝐵𝐵 ′′ �𝑿𝑿𝐵𝐵 ′ �𝑿𝑿𝐵𝐵 ′′ �𝒁𝒁𝐴𝐴 = �𝒁𝒁𝐵𝐵 ′ �𝒀𝒀𝐴𝐴 �𝑿𝑿𝐴𝐴 �𝒀𝒀𝐵𝐵 ′ α �𝑿𝑿𝐵𝐵 ′ Parts based on Kinematics Lecture Slides by Christian Schlette, Professor, SDU Robotics 17 Euler Angles Z-Y-X to Rotation Matrix 𝐵𝐵 𝐴𝐴𝑹𝑹𝑍𝑍′𝑌𝑌′𝑋𝑋′ 𝛼𝛼, 𝛽𝛽, 𝛾𝛾 = 𝑹𝑹𝑍𝑍 𝛼𝛼 𝑹𝑹𝑌𝑌 𝛽𝛽 𝑹𝑹𝑋𝑋 𝛾𝛾 = 𝑐𝑐𝛼𝛼 −𝑠𝑠𝛼𝛼 0 𝑠𝑠𝛼𝛼 𝑐𝑐𝛼𝛼 0 0 0 1 𝑐𝑐𝛽𝛽 0 𝑠𝑠𝛽𝛽 0 1 0 −𝑠𝑠𝛽𝛽 0 𝑐𝑐𝛽𝛽 1 0 0 0 𝑐𝑐𝛾𝛾 −𝑠𝑠𝛾𝛾 0 𝑠𝑠𝛾𝛾 𝑐𝑐𝛾𝛾 = 𝑐𝑐𝛼𝛼𝑐𝑐𝛽𝛽 𝑐𝑐𝛼𝛼𝑠𝑠𝛽𝛽𝑠𝑠𝛾𝛾 − 𝑠𝑠𝛼𝛼𝑐𝑐𝛾𝛾 𝑐𝑐𝛼𝛼𝑠𝑠𝛽𝛽𝑐𝑐𝛾𝛾 + 𝑠𝑠𝛼𝛼𝑠𝑠𝛾𝛾 𝑠𝑠𝛼𝛼𝑐𝑐𝛽𝛽 𝑠𝑠𝛼𝛼𝑠𝑠𝛽𝛽𝑠𝑠𝛾𝛾 + 𝑐𝑐𝛼𝛼𝑐𝑐𝛾𝛾 𝑠𝑠𝛼𝛼𝑠𝑠𝛽𝛽𝑐𝑐𝛾𝛾 − 𝑐𝑐𝛼𝛼𝑠𝑠𝛾𝛾 −𝑠𝑠𝛽𝛽 𝑐𝑐𝛽𝛽𝑠𝑠𝛾𝛾 𝑐𝑐𝛽𝛽𝑐𝑐𝛾𝛾 �𝑿𝑿𝑩𝑩 �𝒁𝒁𝑩𝑩 �𝒀𝒀𝑩𝑩 𝑩𝑩 �𝒁𝒁𝐴𝐴 �𝒀𝒀𝐴𝐴 �𝑿𝑿𝐴𝐴 𝑨𝑨 𝑍𝑍 = 90° 𝑌𝑌 = 90° 𝑋𝑋 = 90° You have already done this! Just right-multiply three rotation matrices around each axis in order: 𝑐𝑐𝛼𝛼 = cos 𝛼𝛼 , 𝑠𝑠𝛼𝛼 = sin 𝛼𝛼 Stack from left to right (i.e. multiply each new rotation on the right) 18 Fixed Angles X-Y-Z (Roll-Pitch-Yaw) Fixed angles: Each rotation is performed about an axis of the same fixed reference coordinate system. �𝒁𝒁𝐴𝐴 �𝒀𝒀𝐴𝐴 �𝑿𝑿𝐴𝐴 �𝑿𝑿𝐵𝐵 ′′′ �𝒀𝒀𝐵𝐵 ′′′ 𝛼𝛼 �𝒁𝒁𝐵𝐵 ′′′ �𝒁𝒁𝐴𝐴 �𝒀𝒀𝐴𝐴 �𝑿𝑿𝐴𝐴 �𝑿𝑿𝐵𝐵 ′′ �𝒀𝒀𝐵𝐵 ′′ 𝛽𝛽 �𝒁𝒁𝐵𝐵 ′′�𝒁𝒁𝐴𝐴 �𝒀𝒀𝐴𝐴 �𝑿𝑿𝐴𝐴 = �𝑿𝑿𝐵𝐵 ′ �𝒁𝒁𝐵𝐵 ′ �𝒀𝒀𝐵𝐵 ′ 𝛾𝛾 1. Start with a known frame {𝑨𝑨}. Rotate first about �𝑿𝑿𝐴𝐴 by angle 𝛾𝛾. 2. Then, rotate about the �𝒀𝒀𝐴𝐴 by angle 𝛽𝛽. 3. Finally, rotate about the �𝒁𝒁𝐴𝐴 by angle 𝛼𝛼. Parts based on Kinematics Lecture Slides by Christian Schlette, Professor, SDU Robotics 19 Fixed Angles X-Y-Z to Rotation Matrix 𝐵𝐵 𝐴𝐴𝑹𝑹𝑋𝑋𝑌𝑌𝑍𝑍 𝛾𝛾, 𝛽𝛽, 𝛼𝛼 = 𝑹𝑹𝑍𝑍 𝛼𝛼 𝑹𝑹𝑌𝑌 𝛽𝛽 𝑹𝑹𝑋𝑋 𝛾𝛾 = ??? Opposite of Euler angles: left-multiply three rotation matrices around each axis in order: Stack from right to left (i.e. multiply each new rotation on the left) 20 Using combinations of your three functions rotx(), roty(), rotz(): 1. Calculate: a) The rotation matrix for the Euler Angles Z-Y-X, for 𝛼𝛼 = 35°, 𝛽𝛽 = 70°, 𝛾𝛾 = 20°. b) The rotation matrix for the Fixed Angles X-Y-Z (RPY), for 𝛾𝛾 = 20°, 𝛽𝛽 = 70°, 𝛼𝛼 = 35°. 2. Calculate: a) The rotation matrix for the Euler Angles Z-Y-Z, for 𝛼𝛼 = 80°, 𝛽𝛽 = 125°, 𝛾𝛾 = −70°. b) The rotation matrix for the Fixed Angles Z-Y-Z, for 𝛾𝛾 = −70°, 𝛽𝛽 = 125°, 𝛼𝛼 = 80°. In MATLAB, try the following: Notice anything interesting? 21 Relation between Fixed and Euler Angles Fixed angles for a certain order are equal to Euler angles with the opposite order! 𝐵𝐵 𝐴𝐴𝑹𝑹𝑋𝑋𝑌𝑌𝑍𝑍 𝛾𝛾, 𝛽𝛽, 𝛼𝛼 = 𝐵𝐵 𝐴𝐴𝑹𝑹𝑍𝑍′𝑌𝑌′𝑋𝑋′ 𝛼𝛼, 𝛽𝛽, 𝛾𝛾 𝐵𝐵 𝐴𝐴𝑹𝑹𝑌𝑌𝑍𝑍𝑋𝑋 𝛾𝛾, 𝛽𝛽, 𝛼𝛼 = 𝐵𝐵 𝐴𝐴𝑹𝑹𝑋𝑋′𝑍𝑍′𝑌𝑌′ 𝛼𝛼, 𝛽𝛽, 𝛾𝛾 𝐵𝐵 𝐴𝐴𝑹𝑹𝑍𝑍𝑋𝑋𝑌𝑌 𝛾𝛾, 𝛽𝛽, 𝛼𝛼 = 𝐵𝐵 𝐴𝐴𝑹𝑹𝑌𝑌′𝑋𝑋′𝑍𝑍′ 𝛼𝛼, 𝛽𝛽, 𝛾𝛾 etc. What is happening? How can we interpret the two approaches geometrically? 22 Local vs. Global Coordinate Frames (and Pre/Post-multiplication) Fixed Angles Euler Angles • Global coordinate frame, does not move • Left-multiplied • For a robot: the base is a fixed frame • Local coordinate frame, moves • Right-multiplied • For a robot, the tool is a moving frame It comes down to: are we moving or fixing the reference frame? 23 An Issue with Angle-Sets: Gimbal Lock (Example) 24 Gimbal Lock 25 Gimbal Lock: When does it happen? Gimbal lock can happen for two different reasons: • Mathematically: in representations that map 3D orientation to sets of three angles (i.e. angle-sets). • Physically:  In mechanisms that decouple orientation into several angles. (e.g. the airplane gunner example).  In measurement systems that decouple quantities related to orientation into several angles. (e.g. Inertial Measurement units  see Apollo 11) 26 Rotation Matrix to Fixed Angles X-Y-Z (I) 𝛽𝛽 = atan2 −𝑟𝑟31, 𝑟𝑟11 2 + 𝑟𝑟21 2 cos 𝛽𝛽 = 𝑟𝑟11 2+ 𝑟𝑟21 2, sin 𝛽𝛽 = −𝑟𝑟31 𝐵𝐵 𝐴𝐴𝑹𝑹𝑍𝑍′𝑌𝑌′𝑋𝑋′ 𝛼𝛼, 𝛽𝛽, 𝛾𝛾 = 𝐵𝐵 𝐴𝐴𝑹𝑹𝑋𝑋𝑌𝑌𝑍𝑍 𝛾𝛾, 𝛽𝛽, 𝛼𝛼 = 𝑐𝑐𝛼𝛼𝑐𝑐𝛽𝛽 𝑐𝑐𝛼𝛼𝑠𝑠𝛽𝛽𝑠𝑠𝛾𝛾 − 𝑠𝑠𝛼𝛼𝑐𝑐𝛾𝛾 𝑐𝑐𝛼𝛼𝑠𝑠𝛽𝛽𝑐𝑐𝛾𝛾 + 𝑠𝑠𝛼𝛼𝑠𝑠𝛾𝛾 𝑠𝑠𝛼𝛼𝑐𝑐𝛽𝛽 𝑠𝑠𝛼𝛼𝑠𝑠𝛽𝛽𝑠𝑠𝛾𝛾 + 𝑐𝑐𝛼𝛼𝑐𝑐𝛾𝛾 𝑠𝑠𝛼𝛼𝑠𝑠𝛽𝛽𝑐𝑐𝛾𝛾 − 𝑐𝑐𝛼𝛼𝑠𝑠𝛾𝛾 −𝑠𝑠𝛽𝛽 𝑐𝑐𝛽𝛽𝑠𝑠𝛾𝛾 𝑐𝑐𝛽𝛽𝑐𝑐𝛾𝛾 = 𝑟𝑟11 𝑟𝑟12 𝑟𝑟13 𝑟𝑟21 𝑟𝑟22 𝑟𝑟23 𝑟𝑟31 𝑟𝑟32 𝑟𝑟33 (cos 𝛼𝛼 cos 𝛽𝛽)2+(sin 𝛼𝛼 cos 𝛽𝛽)2= cos 𝛽𝛽 2 (cos 𝛼𝛼)2+(sin 𝛼𝛼)2 = cos 𝛽𝛽 ⟶ tan 𝛽𝛽 = sin 𝛽𝛽 cos 𝛽𝛽 ⟶ 𝛽𝛽 = atan −𝑟𝑟31 𝑟𝑟11 2+ 𝑟𝑟21 2 atan2 is a better version of atan that takes into account the full circle. 27 atan vs atan2 𝐚𝐚𝐭𝐭𝐚𝐚𝐭𝐭𝐭𝐭 𝒚𝒚, 𝒙𝒙𝐚𝐚𝐭𝐭𝐚𝐚𝐭𝐭 𝒚𝒚 𝒙𝒙 Returns angles between 𝜋𝜋 2 and − 𝜋𝜋 2 . Returns angles in the full circle (0 to 2𝜋𝜋). 28 Rotation Matrix to Fixed Angles X-Y-Z (II) 𝑟𝑟21= sin 𝛼𝛼 cos 𝛽𝛽 ⟶ sin 𝛼𝛼 = 𝑟𝑟21 cos 𝛽𝛽 𝑟𝑟11= cos 𝛼𝛼 cos 𝛽𝛽 ⟶ cos 𝛼𝛼 = 𝑟𝑟11 cos 𝛽𝛽 𝐵𝐵 𝐴𝐴𝑹𝑹𝑍𝑍′𝑌𝑌′𝑋𝑋′ 𝛼𝛼, 𝛽𝛽, 𝛾𝛾 = 𝐵𝐵 𝐴𝐴𝑹𝑹𝑋𝑋𝑌𝑌𝑍𝑍 𝛾𝛾, 𝛽𝛽, 𝛼𝛼 = 𝑐𝑐𝛼𝛼𝑐𝑐𝛽𝛽 𝑐𝑐𝛼𝛼𝑠𝑠𝛽𝛽𝑠𝑠𝛾𝛾 − 𝑠𝑠𝛼𝛼𝑐𝑐𝛾𝛾 𝑐𝑐𝛼𝛼𝑠𝑠𝛽𝛽𝑐𝑐𝛾𝛾 + 𝑠𝑠𝛼𝛼𝑠𝑠𝛾𝛾 𝑠𝑠𝛼𝛼𝑐𝑐𝛽𝛽 𝑠𝑠𝛼𝛼𝑠𝑠𝛽𝛽𝑠𝑠𝛾𝛾 + 𝑐𝑐𝛼𝛼𝑐𝑐𝛾𝛾 𝑠𝑠𝛼𝛼𝑠𝑠𝛽𝛽𝑐𝑐𝛾𝛾 − 𝑐𝑐𝛼𝛼𝑠𝑠𝛾𝛾 −𝑠𝑠𝛽𝛽 𝑐𝑐𝛽𝛽𝑠𝑠𝛾𝛾 𝑐𝑐𝛽𝛽𝑐𝑐𝛾𝛾 = 𝑟𝑟11 𝑟𝑟12 𝑟𝑟13 𝑟𝑟21 𝑟𝑟22 𝑟𝑟23 𝑟𝑟31 𝑟𝑟32 𝑟𝑟33 𝛼𝛼 = 𝑎𝑎𝑡𝑡𝑎𝑎𝑡𝑡𝑡 𝑟𝑟21 cos 𝛽𝛽 , 𝑟𝑟11 cos 𝛽𝛽 𝛾𝛾 = 𝑎𝑎𝑡𝑡𝑎𝑎𝑡𝑡𝑡 𝑟𝑟32 cos 𝛽𝛽 , 𝑟𝑟33 cos 𝛽𝛽 𝑟𝑟32= cos 𝛽𝛽 sin 𝛾𝛾 ⟶ sin 𝛾𝛾 = 𝑟𝑟32 cos 𝛽𝛽 𝑟𝑟33= cos 𝛽𝛽 cos 𝛾𝛾 ⟶ cos 𝛾𝛾 = 𝑟𝑟33 cos 𝛽𝛽 29 Rotation Matrix to Other Angle-Sets We have seen how to convert a rotation matrix to fixed angle X-Y-Z. How do we do it for other kinds of angle sets? • We can use Fixed angle to Euler angle equivalences.  e.g. Fixed angle X-Y-Z = Euler angle Z-Y-X • We can use similar logic to the previous slides for other angle combinations: 1. Isolate sine and cosine for one angle. 2. Use atan2 to compute the angle. 3. Repeat for other angles. Part III: Equivalent Angle-Axis 31 Equivalent Angle-Axis (Euler Vector) Combination of: • Axis: unit vector that represents the direction around which we rotate. • Angle: scalar that represents how much we rotate, using the right-hand rule. Can be given as: 𝜃𝜃, �𝑲𝑲 = 𝑘𝑘𝑥𝑥 𝑘𝑘𝑦𝑦 𝑘𝑘𝑧𝑧 or 𝑲𝑲 = 𝜃𝜃 �𝑲𝑲 = 𝜃𝜃𝑘𝑘𝑥𝑥 𝜃𝜃𝑘𝑘𝑦𝑦 𝜃𝜃𝑘𝑘𝑧𝑧 �𝒁𝒁𝐴𝐴 �𝒀𝒀𝐴𝐴 �𝑿𝑿𝐴𝐴 �𝑿𝑿𝐵𝐵 �𝒀𝒀𝐵𝐵 𝜃𝜃 �𝒁𝒁𝐵𝐵 𝑨𝑨 𝑩𝑩 𝐴𝐴 �𝑲𝑲 separate combined* *Universal Robots uses this representation in their Graphical User Interface 32 Equivalent Angle-Axis to Rotation Matrix When we defined 𝑹𝑹𝑋𝑋 𝜃𝜃 , 𝑹𝑹𝑌𝑌 𝜃𝜃 , 𝑹𝑹𝑍𝑍 𝜃𝜃 in Lecture 4, we were already doing this. We can do this for any arbitrary angle: 𝐵𝐵 𝐴𝐴𝑹𝑹𝐾𝐾 𝜃𝜃 = 𝑘𝑘𝑥𝑥𝑘𝑘𝑥𝑥𝑣𝑣𝜃𝜃 + 𝑐𝑐𝜃𝜃 𝑘𝑘𝑥𝑥𝑘𝑘𝑦𝑦𝑣𝑣𝜃𝜃 − 𝑘𝑘𝑧𝑧𝑠𝑠𝜃𝜃 𝑘𝑘𝑥𝑥𝑘𝑘𝑧𝑧𝑣𝑣𝜃𝜃 + 𝑘𝑘𝑦𝑦𝑠𝑠𝜃𝜃 𝑘𝑘𝑥𝑥𝑘𝑘𝑦𝑦𝑣𝑣𝜃𝜃 + 𝑘𝑘𝑧𝑧𝑠𝑠𝜃𝜃 𝑘𝑘𝑦𝑦𝑘𝑘𝑦𝑦𝑣𝑣𝜃𝜃 + 𝑐𝑐𝜃𝜃 𝑘𝑘𝑦𝑦𝑘𝑘𝑧𝑧𝑣𝑣𝜃𝜃 − 𝑘𝑘𝑥𝑥𝑠𝑠𝜃𝜃 𝑘𝑘𝑥𝑥𝑘𝑘𝑧𝑧𝑣𝑣𝜃𝜃 − 𝑘𝑘𝑦𝑦𝑠𝑠𝜃𝜃 𝑘𝑘𝑦𝑦𝑘𝑘𝑧𝑧𝑣𝑣𝜃𝜃 + 𝑘𝑘𝑥𝑥𝑠𝑠𝜃𝜃 𝑘𝑘𝑧𝑧𝑘𝑘𝑧𝑧𝑣𝑣𝜃𝜃 + 𝑐𝑐𝜃𝜃 , with 𝑣𝑣𝜃𝜃 = 1 − 𝑐𝑐𝜃𝜃 Deriving this is quite tedious. You can try this as an exercise (2.6). 33 Rotation Matrix to Equivalent Angle-Axis 𝐵𝐵 𝐴𝐴𝑹𝑹𝐾𝐾 𝜃𝜃 = 𝑟𝑟11 𝑟𝑟12 𝑟𝑟13 𝑟𝑟21 𝑟𝑟22 𝑟𝑟23 𝑟𝑟31 𝑟𝑟32 𝑟𝑟33 𝜃𝜃 = acos 𝑟𝑟11+ 𝑟𝑟22+ 𝑟𝑟33− 1 2 �𝑲𝑲 = 1 2 sin 𝜃𝜃 𝑟𝑟32− 𝑟𝑟23 𝑟𝑟13− 𝑟𝑟31 𝑟𝑟21− 𝑟𝑟12 Given a rotation matrix: An angle-axis pair can be computed as: Note that: 𝜃𝜃, �𝑲𝑲 = −𝜃𝜃, − �𝑲𝑲 34 Recap: What have we discussed today • The problems with mathematically modeling 3D orientations/rotations. • Angle-set conventions • Fixed angles • Euler angles • Gimbal Lock • Equivalent Angle-Axis • Conversions between representations There are various ways to represent orientation in 3D space. When choosing one or another, it is important to keep in mind the application (e.g. calculations or visualization) and the limitations of the representation (e.g. Gimbal lock). Take home message: 35 Thank you for today. Iñigo Iturrate inju@mmmi.sdu.dk Ø27-604-3","libVersion":"0.2.4","langs":""}